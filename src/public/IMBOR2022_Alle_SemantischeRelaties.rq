# Alle semantische relaties voor concept A (inclusief de overgeërfde) en hun doel (concept B)

PREFIX sh: <http://www.w3.org/ns/shacl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX nen2660: <https://w3id.org/nen2660/def#>
PREFIX imbor: <https://data.crow.nl/imbor/def/>
PREFIX coll: <https://data.crow.nl/rest-api/id#>
PREFIX restapi: <https://data.crow.nl/rest-api/def#>

SELECT DISTINCT ?uriConceptA ?labelConceptA ?uriRelatie ?labelRelatie ?labelRelatieVanObject ?labelMultipliciteit ?uriConceptB ?labelConceptB

WHERE { 

# Kies alleen degene die voor de REST-API gedefinieerd zijn als "IMBOR", "versie 2022" en in de "IMBOR Kern" zitten.
# (Omdat het hostingplatform van het SPARQL-endpoint geen grafen onderscheidt, is deze tussenstap (voorlopig) nodig)
    coll:IMBOR restapi:hasMember ?uriConceptA .
    coll:IMBOR-versie-2022 restapi:hasMember ?uriConceptA .
    imbor: restapi:hasMember ?uriConceptA .
    
# Selecteer alle concepten en hun supertype die een sh:path hebben waarin "nen2660" voorkomen.
	        ?uriConceptA rdfs:subClassOf* ?uriSupertype ;
                         skos:prefLabel ?labelConceptA .
    		?uriSupertype skos:prefLabel ?labelRelatieVanObject ;
                    	  sh:property ?uriShapeSupertype .
            FILTER(LangMatches(LANG(?labelRelatieVanObject), "nl")) .              
    		?uriShapeSupertype sh:path ?uriRelatie ;
                               skos:prefLabel ?labelRelatie .
            FILTER(STRSTARTS(STR(?uriRelatie), STR(nen2660:)))

# ... en laat optioneel zien of er extra informatie over de koppeling is.
    OPTIONAL {?uriShapeSupertype sh:qualifiedMinCount ?qshapeMinCount} .
    OPTIONAL {?uriShapeSupertype sh:qualifiedMaxCount ?qshapeMaxCount} .
# Presenteer de multipliciteit informatie op een overzichtelijk manier in één kolom.
    BIND (CONCAT(IF(BOUND(?qshapeMinCount),STR(?qshapeMinCount),"0"),":",IF(BOUND(?qshapeMaxCount),STR(?qshapeMaxCount),"n")) AS ?labelMultipliciteit) 

# Vraag voor elk supertype de klasse op waar de relatie naar linkt    
    		?uriShapeSupertype sh:qualifiedValueShape/sh:class ?uriConceptB .
            ?uriConceptB skos:prefLabel ?labelConceptB .

} 
ORDER BY STR(?labelConceptA) STR(?labelRelatieVanObject) STR(?labelConceptB)
